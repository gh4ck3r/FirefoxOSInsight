/* THIS FILE IS AUTOGENERATED - DO NOT EDIT */

#ifndef mozilla_dom_RTCConfigurationBinding_h__
#define mozilla_dom_RTCConfigurationBinding_h__

#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/DOMJSClass.h"
#include "mozilla/dom/DOMJSProxyHandler.h"

class XPCWrappedNativeScope;

namespace mozilla {
namespace dom {

struct RTCIceServer : public MainThreadDictionaryBase {
  RTCIceServer() {}
  bool Init(JSContext* cx, JSObject* scopeObj, const JS::Value& val);
  bool ToObject(JSContext* cx, JSObject* parentObject, JS::Value *vp);

  bool Init(const nsAString& aJSON)
  {
    mozilla::Maybe<JSAutoRequest> ar;
    mozilla::Maybe<JSAutoCompartment> ac;
    jsval json = JSVAL_VOID;
    JSContext* cx = ParseJSON(aJSON, ar, ac, json);
    NS_ENSURE_TRUE(cx, false);
    return Init(cx, nullptr, json);
  }

  nsString mCredential;
  Optional< nsString > mUrl;
private:
  // Disallow copy-construction
  RTCIceServer(const RTCIceServer&) MOZ_DELETE;
  static bool InitIds(JSContext* cx);
  static bool initedIds;
  static jsid credential_id;
  static jsid url_id;
};
struct RTCIceServerInitializer : public RTCIceServer {
  RTCIceServerInitializer() {
    // Safe to pass a null context if we pass a null value
    Init(nullptr, nullptr, JS::NullValue());
  }
};

struct RTCConfiguration : public MainThreadDictionaryBase {
  RTCConfiguration() {}
  bool Init(JSContext* cx, JSObject* scopeObj, const JS::Value& val);
  bool ToObject(JSContext* cx, JSObject* parentObject, JS::Value *vp);

  bool Init(const nsAString& aJSON)
  {
    mozilla::Maybe<JSAutoRequest> ar;
    mozilla::Maybe<JSAutoCompartment> ac;
    jsval json = JSVAL_VOID;
    JSContext* cx = ParseJSON(aJSON, ar, ac, json);
    NS_ENSURE_TRUE(cx, false);
    return Init(cx, nullptr, json);
  }

  Optional< Sequence< RTCIceServer > > mIceServers;
private:
  // Disallow copy-construction
  RTCConfiguration(const RTCConfiguration&) MOZ_DELETE;
  static bool InitIds(JSContext* cx);
  static bool initedIds;
  static jsid iceServers_id;
};
struct RTCConfigurationInitializer : public RTCConfiguration {
  RTCConfigurationInitializer() {
    // Safe to pass a null context if we pass a null value
    Init(nullptr, nullptr, JS::NullValue());
  }
};

} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_RTCConfigurationBinding_h__
